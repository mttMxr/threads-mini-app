#!/usr/bin/env python3
import requests
import json
import os
import subprocess
import time

def create_github_repo():
    """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub —á–µ—Ä–µ–∑ API"""
    
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–∞ GitHub...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
    token = os.getenv('GITHUB_TOKEN')
    if not token:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω GITHUB_TOKEN")
        print("–°–æ–∑–¥–∞–π—Ç–µ —Ç–æ–∫–µ–Ω –Ω–∞ https://github.com/settings/tokens")
        print("–ò —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é: export GITHUB_TOKEN=your_token")
        return None
    
    # –î–∞–Ω–Ω—ã–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    repo_data = {
        "name": "threads-mini-app",
        "description": "ThreadsZavod Mini App - Telegram Mini App –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–π",
        "private": False,
        "auto_init": True,
        "gitignore_template": "Node",
        "license_template": "mit"
    }
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    headers = {
        "Authorization": f"token {token}",
        "Accept": "application/vnd.github.v3+json"
    }
    
    response = requests.post(
        "https://api.github.com/user/repos",
        headers=headers,
        data=json.dumps(repo_data)
    )
    
    if response.status_code == 201:
        repo_info = response.json()
        repo_url = repo_info['html_url']
        print(f"‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω: {repo_url}")
        return repo_url
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: {response.status_code}")
        print(response.text)
        return None

def push_files():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"""
    print("üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    subprocess.run(["git", "remote", "add", "origin", "https://github.com/maximilianus/threads-mini-app.git"])
    
    # –ü—É—à–∏–º —Ñ–∞–π–ª—ã
    subprocess.run(["git", "push", "-u", "origin", "main"])
    
    print("‚úÖ –§–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã")

def enable_pages():
    """–í–∫–ª—é—á–∞–µ—Ç GitHub Pages"""
    print("üåê –í–∫–ª—é—á–µ–Ω–∏–µ GitHub Pages...")
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    time.sleep(5)
    
    pages_data = {
        "source": {
            "branch": "main",
            "path": "/"
        }
    }
    
    token = os.getenv('GITHUB_TOKEN')
    headers = {
        "Authorization": f"token {token}",
        "Accept": "application/vnd.github.v3+json"
    }
    
    response = requests.post(
        "https://api.github.com/repos/maximilianus/threads-mini-app/pages",
        headers=headers,
        data=json.dumps(pages_data)
    )
    
    if response.status_code in [201, 409]:  # 409 –µ—Å–ª–∏ —É–∂–µ –≤–∫–ª—é—á–µ–Ω–æ
        print("‚úÖ GitHub Pages –≤–∫–ª—é—á–µ–Ω")
        return "https://maximilianus.github.io/threads-mini-app"
    else:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è Pages: {response.status_code}")
        return "https://maximilianus.github.io/threads-mini-app"

def main():
    print("üéØ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ ThreadsZavod Mini App")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    repo_url = create_github_repo()
    if not repo_url:
        return
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã
    push_files()
    
    # –í–∫–ª—é—á–∞–µ–º Pages
    pages_url = enable_pages()
    
    print("\n" + "=" * 50)
    print("‚úÖ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print(f"üåê URL Mini App: {pages_url}")
    print("\nüìù –û–±–Ω–æ–≤–∏—Ç–µ URL –≤ –±–æ—Ç–µ:")
    print(f"–ó–∞–º–µ–Ω–∏—Ç–µ —Å—Ç—Ä–æ–∫—É –≤ Threads/main.py:")
    print(f'web_app_url = "{pages_url}"')
    print("\nüéâ Mini App –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")

if __name__ == "__main__":
    main() 